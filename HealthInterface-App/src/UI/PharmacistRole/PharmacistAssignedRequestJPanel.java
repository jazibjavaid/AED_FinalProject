/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.PharmacistRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Pharmacist.Pharmacist;
import Business.UserAccount.UserAccount;
import Business.WorkProcess.HealthRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shantanutyagi
 */
public class PharmacistAssignedRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePharmacistProfileJPanel
     */
    private UserAccount useraccount;
    private EcoSystem system;
    private Enterprise enterprise;
    private Organization organization;
    private JPanel userProcessContainer;
    private HealthRequest req;
    private Pharmacist pharmacist;

    public PharmacistAssignedRequestJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, EcoSystem system, Organization organization) {
        initComponents();
        this.useraccount = account;
        this.system = system;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userProcessContainer = userProcessContainer;
        SubmittedrequestsJTable.setRowHeight(25);
        SubmittedrequestsJTable.getTableHeader().setDefaultRenderer(new HeaderColor());
        populateRequestTable();
    }

    public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused, int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);
            setBackground(new java.awt.Color(18, 102, 153));
            return this;
        }
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) SubmittedrequestsJTable.getModel();
        model.setRowCount(0);
        Pharmacist pharmacist = null;
        for (Organization org : enterprise.getOrganizationDirectory().getOrgList()) {
            if (org.getPharDir().findPhar(useraccount.getUsername()) != null) {
                pharmacist = org.getPharDir().findPhar(useraccount.getUsername());
                for (HealthRequest req : pharmacist.getRequestDirectory().getRequestList()) {
                    Object[] row = new Object[6];
                    row[0] = req;
                    row[1] = req.getUser().getName();
                    row[2] = req.getUser().getContactNumber();
                    row[3] = req.getUser().getAddress();
                    row[4] = req.getUser().getZipcode();
                    row[5] = req.getStatus();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DoctorScrollPane = new javax.swing.JScrollPane();
        SubmittedrequestsJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        viewDetails = new javax.swing.JButton();
        btnCompletedOrder = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        SubmittedrequestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Patients Name", "Contact Number", "Address", "Zipcode", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SubmittedrequestsJTable.setRequestFocusEnabled(false);
        SubmittedrequestsJTable.setSelectionBackground(new java.awt.Color(235, 227, 126));
        DoctorScrollPane.setViewportView(SubmittedrequestsJTable);

        jLabel1.setFont(new java.awt.Font(".SF NS Text", 1, 18)); // NOI18N
        jLabel1.setText("Medicine Requests");

        viewDetails.setBackground(new java.awt.Color(253, 135, 124));
        viewDetails.setFont(new java.awt.Font(".SF NS Text", 1, 14)); // NOI18N
        viewDetails.setText("View Details");
        viewDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        viewDetails.setContentAreaFilled(false);
        viewDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewDetailsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewDetailsMouseExited(evt);
            }
        });
        viewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsActionPerformed(evt);
            }
        });

        btnCompletedOrder.setBackground(new java.awt.Color(253, 135, 124));
        btnCompletedOrder.setFont(new java.awt.Font(".SF NS Text", 1, 14)); // NOI18N
        btnCompletedOrder.setText("Manage Completed Request");
        btnCompletedOrder.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnCompletedOrder.setContentAreaFilled(false);
        btnCompletedOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCompletedOrderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCompletedOrderMouseExited(evt);
            }
        });
        btnCompletedOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletedOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(433, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCompletedOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DoctorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DoctorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCompletedOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(306, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsActionPerformed
        // TODO add your handling code here:

        int selectedRow = SubmittedrequestsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        } else {
            for (Organization org : enterprise.getOrganizationDirectory().getOrgList()) {
                if (org.getPharDir().findPhar(useraccount.getUsername()) != null) {
                    pharmacist = org.getPharDir().findPhar(useraccount.getUsername());
                    req = (HealthRequest) SubmittedrequestsJTable.getValueAt(selectedRow, 0);
                    RequestDetailsReportJPanel requestDetails = new RequestDetailsReportJPanel(userProcessContainer, enterprise, useraccount, system, req, pharmacist);
                    userProcessContainer.add("PatientManagerProfileJPanel", requestDetails);
                    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                    layout.next(userProcessContainer);
                }
            }

        }
    }//GEN-LAST:event_viewDetailsActionPerformed

    private void btnCompletedOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletedOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = SubmittedrequestsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        } else {
            req = (HealthRequest) SubmittedrequestsJTable.getValueAt(selectedRow, 0);
//            DeliveredMedicinesJPanel completedTestResult=new DeliveredMedicinesJPanel(userProcessContainer,enterprise,useraccount,system, req);
//            userProcessContainer.add("userReport", completedTestResult);
//            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnCompletedOrderActionPerformed

    private void viewDetailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewDetailsMouseEntered
        // TODO add your handling code here:
        viewDetails.setBackground(new java.awt.Color(253, 135, 124));
        viewDetails.setContentAreaFilled(true);
        viewDetails.setFocusPainted(true);
        viewDetails.setBorderPainted(false);
        viewDetails.setOpaque(true);
    }//GEN-LAST:event_viewDetailsMouseEntered

    private void viewDetailsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewDetailsMouseExited
        // TODO add your handling code here:
        viewDetails.setContentAreaFilled(false);
        viewDetails.setFocusPainted(false);
        viewDetails.setBorderPainted(true);
    }//GEN-LAST:event_viewDetailsMouseExited

    private void btnCompletedOrderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompletedOrderMouseEntered
        // TODO add your handling code here:
        btnCompletedOrder.setBackground(new java.awt.Color(253, 135, 124));
        btnCompletedOrder.setContentAreaFilled(true);
        btnCompletedOrder.setFocusPainted(true);
        btnCompletedOrder.setBorderPainted(false);
        btnCompletedOrder.setOpaque(true);
    }//GEN-LAST:event_btnCompletedOrderMouseEntered

    private void btnCompletedOrderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompletedOrderMouseExited
        // TODO add your handling code here:
        btnCompletedOrder.setContentAreaFilled(false);
        btnCompletedOrder.setFocusPainted(false);
        btnCompletedOrder.setBorderPainted(true);
    }//GEN-LAST:event_btnCompletedOrderMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane DoctorScrollPane;
    private javax.swing.JTable SubmittedrequestsJTable;
    private javax.swing.JButton btnCompletedOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton viewDetails;
    // End of variables declaration//GEN-END:variables
}
